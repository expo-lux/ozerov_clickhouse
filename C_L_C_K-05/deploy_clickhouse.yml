---
- name: Python3 install
  hosts: all, !runner
  become: True
  gather_facts: no
    
  tasks:
    - name: initial
      raw: test -e /usr/bin/python3 || ( test -e /usr/bin/yum && yum -y install python3 || apt -y install python3 )

- name: Prepare
  hosts: all, !runner
  become: True
  gather_subset: min
    
  tasks:
    - name: initial
      include_role:
        name: initial

- name: install Clickhouse
  hosts: clickhouse
  become: True
  gather_facts: no

  tasks:

    - name: get my public ip
      become: False
      uri: 
        url: http://icanhazip.com
        return_content: yes
      delegate_to: localhost
      register: my_ip

    - set_fact: public_ip="{{ my_ip['content'] | trim }}"

    - name: block 9000 port for all
      iptables:
        action: append
        chain: INPUT
        in_interface: eth0
        protocol: tcp
        destination_port: "9000"
        jump: DROP

    - name: allow 9000 port for my public IP
      iptables:
        action: insert
        source: "{{ public_ip }}"
        chain: INPUT
        in_interface: eth0
        protocol: tcp
        destination_port: "9000"
        jump: ACCEPT

    - name: 1. Install Clickhouse
      include_role:
        name: clickhouse

    - name: 2. delete /etc/clickhouse-server/users.d/users.xml
      file:
        path: /etc/clickhouse-server/users.d/users.xml
        state: absent
    
    - name: 3. Get count of 'ronly' profile
      community.general.xml:
        path: /etc/clickhouse-server/users.xml
        xpath: /clickhouse/profiles/ronly
        count: true
      register: profile_hits

    - name: 4. Add ronly profile
      block: 
        - community.general.xml:
            path: /etc/clickhouse-server/users.xml
            xpath: /clickhouse/profiles
            pretty_print: yes
            backup: yes
            add_children:
              - ronly:
                  _:
                    - readonly: "1"
                    - max_execution_time: "180"
      when: profile_hits.count < 1

    - name: 4. Set ronly profile
      community.general.xml:
        path: /etc/clickhouse-server/users.xml
        xpath: /clickhouse/profiles
        pretty_print: yes
        backup: yes
        set_children:
          - readonly: "1"
          - max_execution_time: "180"
      when: profile_hits.count == 1

    - name: 6. Get count of 'ch_user' user
      community.general.xml:
        path: /etc/clickhouse-server/users.xml
        xpath: /clickhouse/users/ch_user
        count: true
      register: hits

    - name: 6. Add ch_user
      block: 
        - community.general.xml:
            path: /etc/clickhouse-server/users.xml
            xpath: /clickhouse/users
            pretty_print: yes
            backup: yes
            add_children:
              - ch_user:
                  _:
                    - password: ch_password
                    - access_management: "0"
                    - profile: ronly
                    - networks:
                        _:
                          - ip: 127.0.0.1/32
                          - ip: "{{ public_ip }}"
      when: hits.count < 1

    - name: 6. Set ch_user
      community.general.xml:
        path: /etc/clickhouse-server/users.xml
        xpath: /clickhouse/users/ch_user
        pretty_print: yes
        backup: yes
        set_children:
          - password: ch_password
          - access_management: "0"
          - profile: ronly
          - networks:
              _:
                - ip: 127.0.0.1/32
                - ip: "{{ public_ip }}"
      when: hits.count == 1

    - name: Wait for config reread
      pause:
        seconds: 5

    - name: Test ch_user
      ansible.builtin.shell: clickhouse-client -u ch_user --password ch_password --multiquery  --query="set max_result_rows=1; select 5;"
      register: result
      failed_when: '"Cannot modify \''max_result_rows\'' setting in readonly mode" not in result.stderr'